22.03.19 19:32:24 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 19:33:59 - (<class 'telebot.apihelper.ApiHTTPException'>, None): A request to the Telegram API was unsuccessful. The server returned HTTP 431 Request Header Fields Too Large. Response body:
[b'']
22.03.19 19:51:58 - (<class 'KeyError'>, None): 0
22.03.19 19:54:51 - (<class 'KeyError'>, None): 0
22.03.19 19:56:21 - (<class 'KeyError'>, None): 0
22.03.19 20:04:43 - (<class 'TypeError'>, None): unhashable type: 'dict'
22.03.19 20:06:02 - (<class 'TypeError'>, None): unhashable type: 'dict'
22.03.19 20:06:25 - (<class 'TypeError'>, None): unhashable type: 'dict'
22.03.19 22:18:21 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 22:19:02 - (<class 'telebot.apihelper.ApiTelegramException'>, None): A request to the Telegram API was unsuccessful. Error code: 400. Description: Bad Request: message is too long
22.03.19 22:24:54 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 22:26:10 - (<class 'telebot.apihelper.ApiTelegramException'>, None): A request to the Telegram API was unsuccessful. Error code: 400. Description: Bad Request: message is too long
22.03.19 22:32:25 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 22:35:05 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 22:35:58 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=20)
22.03.19 22:38:58 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 22:39:33 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=30)
22.03.19 22:48:10 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:00:29 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:03:48 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:04:33 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:24:22 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:40:54 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:42:28 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:48:26 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=15)
22.03.19 23:49:20 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.19 23:49:55 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=30)
22.03.19 23:56:14 - (<class 'telebot.apihelper.ApiTelegramException'>, None): A request to the Telegram API was unsuccessful. Error code: 400. Description: Bad Request: message is too long
22.03.20 00:53:39 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.20 00:56:52 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.20 01:23:45 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.20 15:09:31 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.20 15:50:35 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.20 16:11:35 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.20 16:12:19 - (<class 'requests.exceptions.ReadTimeout'>, None): HTTPSConnectionPool(host='api.telegram.org', port=443): Read timed out. (read timeout=25)
22.03.20 16:23:36 - (<class 'telebot.apihelper.ApiTelegramException'>, None): A request to the Telegram API was unsuccessful. Error code: 400. Description: Bad Request: message is too long
22.03.21 00:01:33 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:01:38 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:01:43 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:01:48 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:01:53 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:01:58 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:03 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:08 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:13 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:18 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:23 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:28 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:33 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:38 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:44 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:49 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:54 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:02:59 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:03:04 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:03:09 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:03:14 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
22.03.21 00:03:19 - (<class 'TypeError'>, None): eval() arg 1 must be a string, bytes or code object
